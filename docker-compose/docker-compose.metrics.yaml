services:
  node-exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    ports:
    - published: ${CADVISOR_PORT}
      target: 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - ${DOCKER_FOLDER_VARLIB}:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
    - '-housekeeping_interval=30s'
    - '-docker_only=true'    
    restart: unless-stopped

  telegraf:
    image: telegraf:1.34.2
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    volumes:
    - ${TELEGRAF_FOLDER_ETC}:/etc/telegraf/:ro      
    restart: unless-stopped
    
  influxdb:
    image: influxdb:2.7
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    - DOCKER_INFLUXDB_INIT_MODE=setup
    - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
    - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
    - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
    - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
    ports:
    - published: ${INFLUXDB_PORT}
      target: 8086
    restart: unless-stopped
    volumes:
    - ${INFLUXDB_FOLDER_DATA}:/var/lib/influxdb:rw    
    - ${INFLUXDB2_FOLDER_DATA}:/var/lib/influxdb2:rw
    - ${INFLUXDB2_FOLDER_ETC}:/etc/influxdb2
  
  prometheus:
    image: prom/prometheus:v3.2.1
    environment:
    - TZ=Europe/Brussels
    ports:
    - published: ${PROMETHEUS_PORT}
      target: 9090
    user: root
    restart: unless-stopped
    volumes:
    - ${PROMETHEUS_FOLDER_DATA}:/prometheus
    - ${PROMETHEUS_FOLDER_CONFIG}:/etc/prometheus/prometheus.yml
 
  loki:
    image: grafana/loki:3.4.3
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
    - ${LOKI_FOLDER_ETC}/local-config.yaml:/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:3.4.3
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    volumes:
      - ${PROMTAIL_FOLDER_ETC}:/etc/promtail
      - /var/log:/var/log
  
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - ${UPTIME_KUMA_APPDATA}:/app/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3031:3001
    restart: always

  glances:
    image: nicolargo/glances:4.3.1
    restart: always
    pid: host
    ports:
      - "61208:61208"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Uncomment the below line if you want glances to display host OS detail instead of container's
      - /etc/os-release:/etc/os-release:ro
    environment:
      - "GLANCES_OPT=-w"
