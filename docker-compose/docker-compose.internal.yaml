version: '3.0'

services:

  transmission:
    image: linuxserver/transmission:4.0.6
    environment:    
    - TZ=Europe/Brussels
    - PGID=1000
    - PUID=1000
    - USERNAME=${TRANSMISSION_USERNAME}
    - PASSWORD=${TRANSMISSION_PASSWORD}
    - HOME=/root
    ports:
    - 51413:51413
    - 51413:51413/udp
    - ${TRANSMISSION_PORT}:9091
    restart: unless-stopped
    volumes:
    - ${TRANSMISSION_FOLDER_DEFAULT_DOWNLOAD}:/downloads
    - ${TRANSMISSION_FOLDER_TVSHOWS_DOWNLOAD}:/downloads/tvshows
    - ${TRANSMISSION_FOLDER_MOVIES_DOWNLOAD}:/downloads/movies
    - ${TRANSMISSION_FOLDER_CONFIG}:/config
    - ${TRANSMISSION_FOLDER_DATA}:/data  
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
  adguard:
    image: adguard/adguardhome:v0.107.59
    ports:
    - 3030:3000
    - 53:53/tcp
    - 53:53/udp
    - 67:67/udp
    - 853:853
    - ${ADGUARD_PORT_HTTP}:80
    - ${ADGUARD_PORT_8053}:8053
    volumes:
    - ${ADGUARD_FOLDER_CONFIG}:/opt/adguardhome/conf
    - ${ADGUARD_FOLDER_WORK}:/opt/adguardhome/work
    restart: unless-stopped    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        
  mosquitto:
    image: eclipse-mosquitto:2.0.21
    ports:
    - 8883:1883
    - 1883:1883
    - 9001:9001
    volumes:
    - ${MOSQUITTO_FOLDER_CONFIG}:/mosquitto/config
    - ${MOSQUITTO_FOLDER_DATA}:/mosquitto/data
    - ${MOSQUITTO_FOLDER_LOG}:/mosquitto/log
    restart: unless-stopped    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        
  esphome:
    image: esphome/esphome:2025.3.3
    ports:
    - ${ESPHOME_PORT}:6052
    environment:
    - ESPHOME_DASHBOARD_USE_PING=true
    volumes:
    - ${ESPHOME_FOLDER_CONFIG}:/config
    - ${ESPHOME_FOLDER_LOCALTIME}:/etc/localtime
    restart: unless-stopped    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        
  node_red:
    image: nodered/node-red:3.0.1-1
    ports:
    - 1880:1880
    volumes:
    - ${NODERED_FOLDER_DATA}:/data
    restart: unless-stopped    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
  unpackerr:
    image: golift/unpackerr:0.14
    container_name: unpackerr
    volumes:
      # You need at least this one volume mapped so Unpackerr can find your files to extract.
      # Make sure this matches your Starr apps; the folder mount (/downloads or /data) should be identical.
      - ${TRANSMISSION_FOLDER_TVSHOWS_DOWNLOAD}:/downloads
      - ${UNPACKERR_FOLDER_DATA}/logs:/logs
    restart: always
    # Get the user:group correct so unpackerr can read and write to your files.
    user: 1000:1000
    # What you see below are defaults for this compose. You only need to modify things specific to your environment.
    # Remove apps and feature configs you do not use or need. 
    # ie. Remove all lines that begin with UN_CMDHOOK, UN_WEBHOOK, UN_FOLDER, UN_WEBSERVER, and other apps you do not use.
    environment:
      - TZ=${TZ}
      # General config
      - UN_DEBUG=false
      - UN_LOG_FILE_MB=10
      - UN_INTERVAL=2m
      - UN_START_DELAY=1m
      - UN_RETRY_DELAY=5m
      - UN_MAX_RETRIES=3
      - UN_PARALLEL=1
      - UN_FILE_MODE=0644
      - UN_DIR_MODE=0755
      # Sonarr Config
      - UN_SONARR_0_URL=${SONARR_URI}
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      - UN_SONARR_0_PATHS_0=/downloads
      - UN_SONARR_0_PROTOCOLS=torrent
      - UN_SONARR_0_TIMEOUT=10s
      - UN_SONARR_0_DELETE_ORIG=false
      - UN_SONARR_0_DELETE_DELAY=5m
  music_assistant:
    image: ghcr.io/music-assistant/server:2.5.0
    privileged: true
    networks:
      host:
    volumes:
      - ${MUSICASSISTANT_SERVER}:/data
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"

  odin:
    image: ghcr.io/berendwouters/odin:master
    ports:
      - 8884:80
    restart: unless-stopped    
  frigg-api:
    image: ghcr.io/berendwouters/frigg.api:master
    ports:
      - 5001:80
    volumes:
      - ${FRIGG_FILES}:/files
    environment:
      - PathConfiguration__Path=/files
      - FriggContextOptions__ConnectionString=${MONGO_CONNECTIONSTRING}
      - FriggContextOptions__DatabaseName=frigg
      - FriggContextOptions__CollectionName=Tracks
    restart: unless-stopped    
  frigg-processor:
    image: ghcr.io/berendwouters/frigg.processor:master
    volumes:
      - ${FRIGG_FILES}:/files
    environment:
      - PathConfiguration__Path=/files
      - FriggContextOptions__ConnectionString=${MONGO_CONNECTIONSTRING}
      - FriggContextOptions__DatabaseName=frigg
      - FriggContextOptions__CollectionName=Tracks
    restart: unless-stopped    
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      
  meshtastic_web:
    image: ghcr.io/meshtastic/web
    ports:
    - 9980:8080
    restart: unless-stopped    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
networks:
  host: {}
