services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      - ${SONARR_FOLDER_CONFIG}:/config
      - ${SONARR_FOLDER_TVSHOWS}:/tv #optional
      - ${SONARR_FOLDER_DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.middlewares.sonarr_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.sonarr_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.sonarr_http.entrypoints: web
      traefik.http.routers.sonarr_http.middlewares: sonarr_https_redirect
      traefik.http.routers.sonarr_http.rule: Host(`sonarr.${DNS_HOSTNAME}`)
      traefik.http.routers.sonarr_https.entrypoints: websecure
      traefik.http.routers.sonarr_https.rule: Host(`sonarr.${DNS_HOSTNAME}`)
      traefik.http.routers.sonarr_https.tls.certresolver: myresolver
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    depends_on:
      reverse-proxy:
        condition: service_started
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.37.0
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      - ${PROWLARR_FOLDER_CONFIG}:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  bazarr:
    image: ghcr.io/linuxserver/bazarr:1.5.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Brussels
    volumes:
      - ${BAZARR_FOLDER_CONFIG}:/config:rw
      - ${BAZARR_FOLDER_MOVIES}:/movies:rw
      - ${BAZARR_FOLDER_TVSHOWS}:/tv:rw
      - ${BAZARR_FOLDER_MOVIES_DOWNLOADS}:/downloads/movies      - 
      - ${BAZARR_FOLDER_TVSHOWS_DOWNLOADS}:/downloads/series
    labels:
      traefik.enable: "true"
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.middlewares.bazarr_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.bazarr_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.bazarr_http.entrypoints: web
      traefik.http.routers.bazarr_http.middlewares: bazarr_https_redirect
      traefik.http.routers.bazarr_http.rule: Host(`bazarr.${DNS_HOSTNAME}`)
      traefik.http.routers.bazarr_https.entrypoints: websecure
      traefik.http.routers.bazarr_https.rule: Host(`bazarr.${DNS_HOSTNAME}`)
      traefik.http.routers.bazarr_https.tls.certresolver: myresolver
    restart: unless-stopped
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    depends_on:
      reverse-proxy:
        condition: service_started

  grafana:
    image: grafana/grafana-oss:12.1.0
    environment:
      - TZ=Europe/Brussels
    labels:
      traefik.enable: "true"
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      traefik.http.middlewares.grafana_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.grafana_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.grafana_http.entrypoints: web
      traefik.http.routers.grafana_http.middlewares: grafana_https_redirect
      traefik.http.routers.grafana_http.rule: Host(`grafana.${DNS_HOSTNAME}`)
      traefik.http.routers.grafana_https.entrypoints: websecure
      traefik.http.routers.grafana_https.rule: Host(`grafana.${DNS_HOSTNAME}`)
      traefik.http.routers.grafana_https.tls.certresolver: myresolver
    restart: unless-stopped
    user: root
    volumes:
    - ${GRAFANA_FOLDER_DATA}:/var/lib/grafana:rw    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    depends_on:
      reverse-proxy:
        condition: service_started
  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:0.16.0
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.services.homarr.loadbalancer.server.port: 7575
      traefik.http.middlewares.homarr_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.homarr_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.homarr_http.entrypoints: web
      traefik.http.routers.homarr_http.middlewares: homarr_https_redirect
      traefik.http.routers.homarr_http.rule: Host(`homarr.${DNS_HOSTNAME}`)
      traefik.http.routers.homarr_https.entrypoints: websecure
      traefik.http.routers.homarr_https.rule: Host(`homarr.${DNS_HOSTNAME}`)
      traefik.http.routers.homarr_https.tls.certresolver: myresolver
    volumes:
      - ${HOMARR_FOLDER_CONFIG}/configs:/app/data/configs
      - ${HOMARR_FOLDER_CONFIG}/icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock
  heimdall:
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    image: linuxserver/heimdall:2.7.4
    labels:
      traefik.enable: "true"
      traefik.http.services.heimdall.loadbalancer.server.port: 80
      traefik.http.middlewares.heimdall_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.heimdall_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.heimdall_http.entrypoints: web
      traefik.http.routers.heimdall_http.middlewares: heimdall_https_redirect
      traefik.http.routers.heimdall_http.rule: Host(`heimdall.${DNS_HOSTNAME}`)
      traefik.http.routers.heimdall_https.entrypoints: websecure
      traefik.http.routers.heimdall_https.rule: Host(`heimdall.${DNS_HOSTNAME}`)
      traefik.http.routers.heimdall_https.tls.certresolver: myresolver
    restart: unless-stopped
    volumes:
    - ${HEIMDALL_FOLDER_CONFIG}:/config:rw    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    depends_on:
      reverse-proxy:
        condition: service_started

  homeassistant:
    image: homeassistant/home-assistant:2025.8
    environment:
    - PUID=1000
    - PGID=1000
    - TZ=Europe/Brussels
    labels:
      traefik.enable: "true"
      traefik.http.services.homeassistant.loadbalancer.server.port: 8123
      traefik.http.middlewares.homeassistant_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.homeassistant_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.homeassistant_http.entrypoints: web
      traefik.http.routers.homeassistant_http.middlewares: homeassistant_https_redirect
      traefik.http.routers.homeassistant_http.rule: Host(`homeassistant.${DNS_HOSTNAME}`)
      traefik.http.routers.homeassistant_https.entrypoints: websecure
      traefik.http.routers.homeassistant_https.rule: Host(`homeassistant.${DNS_HOSTNAME}`)
      traefik.http.routers.homeassistant_https.tls.certresolver: myresolver
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    ports:
    - published: ${HOMEASSISTANT_PORT}
      target: 8123
    - protocol: udp
      published: 5683
      target: 5683
    restart: unless-stopped
    volumes:
    - ${HOMEASSISTANT_FOLDER_CONFIG}:/config:rw
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    depends_on:
      reverse-proxy:
        condition: service_started
  
  radarr:
    depends_on:
      reverse-proxy:
        condition: service_started
    environment:
      PGID: '1000'
      PUID: '1000'
      TZ: Europe/Brussels
    image: linuxserver/radarr:5.26.2
    labels:
      traefik.enable: "true"
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.middlewares.radarr_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.radarr_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.radarr_http.entrypoints: web
      traefik.http.routers.radarr_http.middlewares: radarr_https_redirect
      traefik.http.routers.radarr_http.rule: Host(`radarr.${DNS_HOSTNAME}`) || Host(`couchpotato.${DNS_HOSTNAME}`)
      traefik.http.routers.radarr_https.entrypoints: websecure
      traefik.http.routers.radarr_https.rule: Host(`radarr.${DNS_HOSTNAME}`) || Host(`couchpotato.${DNS_HOSTNAME}`)
      traefik.http.routers.radarr_https.tls.certresolver: myresolver    
    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    restart: unless-stopped
    volumes:
    - ${RADARR_FOLDER_COMPLETED}:/completed:rw
    - ${RADARR_FOLDER_CONFIG}:/config:rw
    - ${RADARR_FOLDER_DOWNLOADS}:/downloads:rw
    - ${RADARR_FOLDER_MOVIES}:/movies:rw

  reverse-proxy:
    image: traefik:v3.5.0
    command: 
      --log.level=DEBUG 
      --api.insecure=true 
      --providers.docker 
      --providers.docker.exposedByDefault=false
      --entrypoints.web.address=:80 
      --entrypoints.websecure.address=:443 
      --certificatesresolvers.myresolver.acme.httpchallenge=true
      --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web 
      --certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}
      --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json 
      --metrics.prometheus=true
      --metrics.prometheus.addServicesLabels=true 
      --metrics.prometheus.addEntryPointsLabels=true
      --core.defaultRuleSyntax=v2
      --ping=true

    logging:
      driver: loki:latest
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"   
    restart: unless-stopped
    ports:
    - published: 80
      target: 80
    - published: 443
      target: 443
    - published: 8180
      target: 8080
    volumes:
    - ${TRAEFIK_FOLDER_LETSENCRYPT}:/letsencrypt:rw
    - /var/run/docker.sock:/var/run/docker.sock:ro

  jellyfin:
    image: jellyfin/jellyfin:2025081105
    container_name: jellyfin
    user: 1000:1000
    group_add:
      - "109"
    volumes:
      - ${JELLYFIN_FOLDER_CONFIG}:/config
      - ${JELLYFIN_FOLDER_CACHE}:/cache
      - ${RADARR_FOLDER_MOVIES}:/movies:ro
      - ${SICKCHILL_FOLDER_TVSHOWS}:/tvshows:ro
      - ${JELLYFIN_FOLDER_TMP}:/tmp/jellyfin
    devices:
    # Hardware encoding
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card1:/dev/dri/card0
    restart: "unless-stopped"
    # Optional - alternative address used for autodiscovery
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.vnvie.ws
    labels:
      traefik.enable: "true"
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096
      traefik.http.middlewares.jellyfin_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.jellyfin_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.jellyfin_http.entrypoints: web
      traefik.http.routers.jellyfin_http.middlewares: jellyfin_https_redirect
      traefik.http.routers.jellyfin_http.rule: Host(`jellyfin.${DNS_HOSTNAME}`)
      traefik.http.routers.jellyfin_https.entrypoints: websecure
      traefik.http.routers.jellyfin_https.rule: Host(`jellyfin.${DNS_HOSTNAME}`)
      traefik.http.routers.jellyfin_https.tls.certresolver: myresolver
    depends_on:
      reverse-proxy:
        condition: service_started
        
  #youtransfer:
  #  image: remie/youtransfer:stable
  #  container_name: youtransfer
  #  volumes:
  #    - ${YOUTRANSFER_UPLOADS}:/opt/youtransfer/uploads
  #    - ${YOUTRANSFER_CONFIG}:/opt/youtransfer/config
  #  restart: "unless-stopped"    
  #  labels:
  #    traefik.enable: "true"
  #    traefik.http.services.youtransfer.loadbalancer.server.port: 5000
  #    traefik.http.middlewares.youtransfer_https_redirect.redirectscheme.permanent: "true"
  #    traefik.http.middlewares.youtransfer_https_redirect.redirectscheme.scheme: https
  #    traefik.http.routers.youtransfer_http.entrypoints: web
  #    traefik.http.routers.youtransfer_http.middlewares: youtransfer_https_redirect
  #    traefik.http.routers.youtransfer_http.rule: Host(`youtransfer.${DNS_HOSTNAME}`)
  #    traefik.http.routers.youtransfer_https.entrypoints: websecure
  #    traefik.http.routers.youtransfer_https.rule: Host(`youtransfer.${DNS_HOSTNAME}`)
  #    traefik.http.routers.youtransfer_https.tls.certresolver: myresolver
  #  depends_on:
  #    reverse-proxy:
  #      condition: service_started        
  it-tools:
    image: corentinth/it-tools:2024.5.13-a0bc346
    container_name: it-tools
    restart: "unless-stopped"
    labels:
      traefik.enable: "true"
      traefik.http.services.it_tools.loadbalancer.server.port: 80
      traefik.http.middlewares.it_tools_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.it_tools_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.it_tools_http.entrypoints: web
      traefik.http.routers.it_tools_http.middlewares: it_tools_https_redirect
      traefik.http.routers.it_tools_http.rule: Host(`it-tools.${DNS_HOSTNAME}`) || Host(`tools.${DNS_HOSTNAME}`)|| Host(`ittools.${DNS_HOSTNAME}`)
      traefik.http.routers.it_tools_https.entrypoints: websecure
      traefik.http.routers.it_tools_https.rule: Host(`it-tools.${DNS_HOSTNAME}`) || Host(`tools.${DNS_HOSTNAME}`)|| Host(`ittools.${DNS_HOSTNAME}`)
      traefik.http.routers.it_tools_https.tls.certresolver: myresolver
    depends_on:
      reverse-proxy:
        condition: service_started    
  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.2
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Brussels
    ports:
      - 5055:5055
    volumes:
      - ${JELLYSEERR_CONFIG}:/app/config
    restart: unless-stopped
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:2.28.0
    volumes:
      - ${ABS_AUDIOBOOKS}:/audiobooks
      - ${ABS_PODCASTS}:/podcasts
      - ${ABS_CONFIG}:/config
      - ${ABS_METADATA}:/metadata
    restart: "unless-stopped"
    labels:
      traefik.enable: "true"
      traefik.http.services.audiobookshelf.loadbalancer.server.port: 80
      traefik.http.middlewares.audiobookshelf_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.audiobookshelf_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.audiobookshelf_http.entrypoints: web
      traefik.http.routers.audiobookshelf_http.middlewares: audiobookshelf_https_redirect
      traefik.http.routers.audiobookshelf_http.rule: Host(`audiobookshelf.${DNS_HOSTNAME}`) || Host(`abs.${DNS_HOSTNAME}`)
      traefik.http.routers.audiobookshelf_https.entrypoints: websecure
      traefik.http.routers.audiobookshelf_https.rule: Host(`audiobookshelf.${DNS_HOSTNAME}`) || Host(`abs.${DNS_HOSTNAME}`)
      traefik.http.routers.audiobookshelf_https.tls.certresolver: myresolver
    depends_on:
      reverse-proxy:
        condition: service_started    
    environment:
      - TZ=Europe/Brussels

  babybuddy:
    image: lscr.io/linuxserver/babybuddy:2.7.1
    container_name: babybuddy
    environment:
      - TZ=Europe/Brussels
      - CSRF_TRUSTED_ORIGINS=http://10.0.0.100:9800,https://babybuddy.${DNS_HOSTNAME}
    volumes:
      - ${BABYBUDDY_CONFIG}:/config
    ports:
      - 9800:8000
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.services.babybuddy.loadbalancer.server.port: 80
      traefik.http.middlewares.babybuddy_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.babybuddy_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.babybuddy_http.entrypoints: web
      traefik.http.routers.babybuddy_http.middlewares: babybuddy_https_redirect
      traefik.http.routers.babybuddy_http.rule: Host(`babybuddy.${DNS_HOSTNAME}`)
      traefik.http.routers.babybuddy_https.entrypoints: websecure
      traefik.http.routers.babybuddy_https.rule: Host(`babybuddy.${DNS_HOSTNAME}`)
      traefik.http.routers.babybuddy_https.tls.certresolver: myresolver

  wanderer-search:
    container_name: wanderer-search
    image: getmeili/meilisearch:v1.11.3
    environment:
      MEILI_URL: http://wanderer-search:7700
      MEILI_MASTER_KEY: ${WANDERER_MEILI_MASTER_KEY}
      MEILI_NO_ANALYTICS: true
    ports:
      - 7700:7700
    volumes:
      - ${WANDERER_MEILI_DATA}:/meili_data/data.ms
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:7700/health || exit 1
      interval: 15s
      retries: 10
      start_period: 20s
      timeout: 10s
  wanderer-db:
    container_name: wanderer-db
    image: flomp/wanderer-db:0.17.2
    depends_on:
      wanderer-search:
        condition: service_healthy
    environment:
      MEILI_URL: http://wanderer-search:7700
      MEILI_MASTER_KEY: ${WANDERER_MEILI_MASTER_KEY}
      POCKETBASE_ENCRYPTION_KEY: ${WANDERER_POCKETBASE_ENCRYPTION_KEY}
    restart: unless-stopped
    volumes:
      - ${WANDERER_DB_DATA}:/pb_data
  wanderer-web:
    container_name: wanderer-web
    image: flomp/wanderer-web:0.17.2
    depends_on:
      wanderer-search:
        condition: service_healthy
      wanderer-db:
        condition: service_started
    environment:
      MEILI_URL: http://wanderer-search:7700
      MEILI_MASTER_KEY: ${WANDERER_MEILI_MASTER_KEY}
      ORIGIN: https://wanderer.${DNS_HOSTNAME}
      BODY_SIZE_LIMIT: Infinity
      PUBLIC_POCKETBASE_URL: http://wanderer-db:8090
      PUBLIC_DISABLE_SIGNUP: false
      UPLOAD_FOLDER: /app/uploads
      UPLOAD_USER:
      UPLOAD_PASSWORD:
      PUBLIC_VALHALLA_URL: https://valhalla1.openstreetmap.de
      PUBLIC_NOMINATIM_URL: https://nominatim.openstreetmap.org
    volumes:
      - ${WANDERER_UPLOADS}:/app/uploads
    ports:
      - "3333:3000"
    restart: unless-stopped
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.wanderer_https_redirect.redirectscheme.permanent: "true"
      traefik.http.middlewares.wanderer_https_redirect.redirectscheme.scheme: https
      traefik.http.routers.wanderer_http.entrypoints: web
      traefik.http.routers.wanderer_http.middlewares: wanderer_https_redirect
      traefik.http.routers.wanderer_http.rule: Host(`wanderer.${DNS_HOSTNAME}`)
      traefik.http.routers.wanderer_https.entrypoints: websecure
      traefik.http.routers.wanderer_https.rule: Host(`wanderer.${DNS_HOSTNAME}`)
      traefik.http.routers.wanderer_https.tls.certresolver: myresolver

